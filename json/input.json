
{
  "currentBranch": "branchB",
  "sourceCommit": "5ff5a7b9616",
  "targetCommit": "cc8deccab4a",
  "diffList": [
    {
      "directory": "src",
      "codeList": [
        {
          "directory": "main",
          "codeList": [
            {
              "directory": "scala",
              "codeList": [
                {
                  "directory": "com.sparrow.gittest",
                  "codeList": [
                    {
                      "directory": "works",
                      "codeList": [
                        {
                          "file": "Work1.scala",
                          "diffList": [
                            { "code": "      }", "beforeLine": 14, "afterLine": 14, "modification": "None" },
                            { "code": "      case OptionB => {", "beforeLine": 15, "afterLine": 15, "modification": "None" },
                            { "code": "        val secondFiltered = data.zipWithIndex.filterNot(_._2 % 4 == 1)", "beforeLine": 16, "modification": "Removed" },
                            { "code": "        val thirdFilteredData = secondFiltered.filterNot(_._2 % 4 == 2).map(_._1)", "beforeLine": 17, "modification": "Removed" },
                            { "code": "        this.copy(data = thirdFilteredData)", "beforeLine": 18, "modification": "Removed" },
                            { "code": "        val thirdFiltered = data.zipWithIndex.filterNot(_._2 % 4 == 2)", "afterLine": 16, "modification": "Added" },
                            { "code": "        val fourthFilteredData = thirdFiltered.filterNot(_._2 % 4 == 3).map(_._1)", "afterLine": 17, "modification": "Added" },
                            { "code": "        this.copy(data = fourthFilteredData)", "afterLine": 18, "modification": "Added" },
                            { "code": "      }", "beforeLine": 19, "afterLine": 19, "modification": "None" },
                            { "code": "      case _ => this", "beforeLine": 20, "afterLine": 20, "modification": "None" }
                          ]
                        },
                        {
                          "file": "Work2.scala",
                          "diffList": [
                            { "code": "      }", "beforeLine": 27, "afterLine": 27, "modification": "None" },
                            { "code": "      case OptionB => {", "beforeLine": 28, "afterLine": 28, "modification": "None" },
                            { "code": "        val dupWithDelimiterData = data.map(alpha => alpha + \":\" + alpha)", "beforeLine": 29, "modification": "Removed" },
                            { "code": "        val dupWithDelimiterData = data.map(alpha => alpha + \"::\" + alpha)", "afterLine": 29, "modification": "Added" },
                            { "code": "        this.copy(data = dupWithDelimiterData)", "beforeLine": 30, "afterLine": 30, "modification": "None" },
                            { "code": "      }", "beforeLine": 31, "afterLine": 31, "modification": "None" }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],

  "impactedList": [
    {
      "directory": "src",
      "codeList": [
        {
          "directory": "main",
          "codeList": [
            {
              "directory": "scala",
              "codeList": [
                {
                  "directory": "com.sparrow.gittest",
                  "codeList": [
                    {
                      "directory": "works",
                      "codeList": [
                        {
                          "file": "Work1.scala",
                          "impactedList": [
                            { "code": "      }", "line": 29, "from" : []  },
                            { "code": "      case OptionB => {", "line": 30, "from" : []  },
                            { "code": "       val threeAddedData = data.map(_ + 3)", "line": 31, "from" : [ { "file": "src/main/scala/com.sparrow.gittest/Work1.scala", "lines": [16, 17] }, { "file": "src/main/scala/com.sparrow.gittest/Work2.scala", "lines": [29] } ] },
                            { "code": "       this.copy(data = threeAddedData)", "line": 32 , "from" : [{ "file": "src/main/scala/com.sparrow.gittest/Work1.scala", "lines": [16, 17] }, { "file": "src/main/scala/com.sparrow.gittest/Work2.scala", "lines": [29] } ] },
                            { "code": "     }", "line": 33 , "from" : [] },
                            { "code": "     case _ => this", "line": 34 , "from" : [] }
                          ]
                        },
                        {
                          "file": "Work2.scala",
                          "impactedList": [
                            { "code": "      }", "line": 13, "from" : []  },
                            { "code": "      case OptionB => {", "line": 14, "from" : []  },
                            { "code": "        val filteredData = data.zipWithIndex.filterNot(_._2 % 4 == 0).map(_._1)", "line": 15, "from" : [ { "file": "src/main/scala/com.sparrow.gittest/Work1.scala", "lines": [16, 17] }, { "file": "src/main/scala/com.sparrow.gittest/Work2.scala", "lines": [29] } ] },
                            { "code": "        this.copy(data = filteredData)", "line": 16 , "from" : [{ "file": "src/main/scala/com.sparrow.gittest/Work1.scala", "lines": [16, 17] }, { "file": "src/main/scala/com.sparrow.gittest/Work2.scala", "lines": [29] } ] },
                            { "code": "     }", "line": 17 , "from" : [] },
                            { "code": "      case _ => this", "line": 18 , "from" : [] }
                          ]
                        }
                      ],
                      "impactedList": []
                    }
                  ],
                  "impactedList": []
                }
              ],
              "impactedList": []
            }
          ],
          "impactedList": []
        }
      ],
      "impactedList": []
    }
  ]
}